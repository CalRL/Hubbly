name: Manual Build - Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Gradle files
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Cache local Maven repo (for Spigot)
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: m2-${{ runner.os }}-spigot-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            m2-${{ runner.os }}-spigot-      

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Compile Spigot 1.20.6 with BuildTools
        uses: SpraxDev/Action-SpigotMC@v5
        with:
          versions: 1.20.6

      - name: Extract version from build.gradle.kts
        id: get_version
        run: |
          VERSION=$(grep -oP '(?<=version = ")[^"]+' build.gradle.kts)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version is: $VERSION"

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Gradle clean
        run: ./gradlew clean

      - name: Run tests
        run: ./gradlew test

      - name: Build plugin
        run: ./gradlew build

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: v${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false

      - name: Upload JAR to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/Hubbly-${{ env.VERSION }}.jar
          asset_name: Hubbly-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive
